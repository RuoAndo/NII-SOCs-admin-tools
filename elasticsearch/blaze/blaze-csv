	/*
        meta_object.Accept(writer);
        stream.Put('\n');
        stream.Flush();
        writer.Reset(stream);
	*/

	hit["_source"]["start_time"].Accept(writer);stream.Put(',');
	hit["_source"]["source_zone"].Accept(writer);stream.Put(',');
	hit["_source"]["packets"].Accept(writer);stream.Put(',');
	hit["_source"]["sctp_chunks_sent"].Accept(writer);stream.Put(',');
	// hit["_source"]["tags"].Accept(writer);stream.Put(',');
	hit["_source"]["destination_zone"].Accept(writer);stream.Put(',');
	hit["_source"]["session_id"].Accept(writer);stream.Put(',');
	hit["_source"]["packets_received"].Accept(writer);stream.Put(',');
	// hit["_source"]["prospector"].Accept(writer);stream.Put(',');
	hit["_source"]["log_forwarding_profile"].Accept(writer);stream.Put(',');
	hit["_source"]["@version"].Accept(writer);stream.Put(',');
	hit["_source"]["offset"].Accept(writer);stream.Put(',');
	// hit["_source"]["source_user"].Accept(writer);stream.Put(',');
	hit["_source"]["dest_retention_period"].Accept(writer);stream.Put(',');
	// hit["_source"]["source"].Accept(writer);stream.Put(',');
	hit["_source"]["repeat_count"].Accept(writer);stream.Put(',');
	hit["_source"]["sctp_chunks"].Accept(writer);stream.Put(',');
	hit["_source"]["protocol"].Accept(writer);stream.Put(',');
	hit["_source"]["tunnel_id_or_imsi"].Accept(writer);stream.Put(',');
	hit["_source"]["bytes_sent"].Accept(writer);stream.Put(',');
	hit["_source"]["sctp_chunks_received"].Accept(writer);stream.Put(',');
	// hit["_source"]["src_university_id"].Accept(writer);stream.Put(',');
	// hit["_source"]["log"].Accept(writer);stream.Put(',');
	hit["_source"]["action"].Accept(writer);stream.Put(',');
	hit["_source"]["index_day"].Accept(writer);stream.Put(',');
	hit["_source"]["destination_port"].Accept(writer);stream.Put(',');
	hit["_source"]["destination_ip"].Accept(writer);stream.Put(',');
	// hit["_source"]["dest_university_id"].Accept(writer);stream.Put(',');
	hit["_source"]["virtual_system"].Accept(writer);stream.Put(',');
	hit["_source"]["dest_country_code"].Accept(writer);stream.Put(',');
	hit["_source"]["bytes_received"].Accept(writer);stream.Put(',');
	hit["_source"]["flags"].Accept(writer);stream.Put(',');
	hit["_source"]["source_location"].Accept(writer);stream.Put(',');
	hit["_source"]["@timestamp"].Accept(writer);stream.Put(',');
	hit["_source"]["source_ip"].Accept(writer);stream.Put(',');
	hit["_source"]["destination_location"].Accept(writer);stream.Put(',');
	hit["_source"]["capture_time"].Accept(writer);stream.Put(',');
	hit["_source"]["sctp_association_id"].Accept(writer);stream.Put(',');
	// hit["_source"]["beat"].Accept(writer);stream.Put(',');
	// hit["_source"]["hostname"].Accept(writer);stream.Put(',');
	// hit["_source"]["version"].Accept(writer);stream.Put(',');
	hit["_source"]["rule_name"].Accept(writer);stream.Put(',');
	// hit["_source"]["input"].Accept(writer);stream.Put(',');
	hit["_source"]["parent_session_id"].Accept(writer);stream.Put(',');
	hit["_source"]["elapsed_time"].Accept(writer);stream.Put(',');
	hit["_source"]["subtype"].Accept(writer);stream.Put(',');
	hit["_source"]["category"].Accept(writer);stream.Put(',');
	hit["_source"]["source_port"].Accept(writer);stream.Put(',');
	hit["_source"]["application"].Accept(writer);stream.Put(',');
	hit["_source"]["packets_sent"].Accept(writer);stream.Put(',');
	hit["_source"]["session_end_reason"].Accept(writer);stream.Put(',');
	hit["_source"]["src_country_code"].Accept(writer);stream.Put(',');
	// hit["_source"]["src_retention_period"].Accept(writer);stream.Put(',');
	hit["_source"]["bytes"].Accept(writer);stream.Put(',');
	hit["_source"]["action_source"].Accept(writer);stream.Put(',');
	// hit["_source"]["monitor_tag_or_imei"].Accept(writer);stream.Put(',');
	// hit["_source"]["tunnel_type"].Accept(writer);stream.Put(',');
	// hit["_source"]["destination_user"].Accept(writer);stream.Put(',');
	// hit["_source"]["generated_time"].Accept(writer);stream.Put(',');
	hit["_source"]["device_name"].Accept(writer);stream.Put(',');

        stream.Put('\n');
        stream.Flush();
        writer.Reset(stream);